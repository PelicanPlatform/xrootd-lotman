name: Test

on:
  workflow_dispatch:
    branches:
      - main
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: RelWithDebInfo

jobs:
  build:
    strategy:
      matrix:
        external-gtest: [ YES, NO ]
        os: [ ubuntu-latest, ubuntu-22.04 ]

    runs-on: ${{ matrix.os }}
    name: Build with external_gtest=${{ matrix.external-gtest }} on ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: install deps
      run: |

        sudo apt update && sudo apt-get install -y cmake libgtest-dev

        #################################
        # Install Lotman & dependencies #
        #################################
        # nlohmann/json
        git clone https://github.com/nlohmann/json.git && \
        cd json && mkdir build && \
        cd build && cmake -DLIB_INSTALL_DIR=/usr/lib64 .. && \
        make -j`nproc` install

        # json schema validator
        git clone https://github.com/pboettch/json-schema-validator.git && \
        cd json-schema-validator && mkdir build && \
        cd build && cmake -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DCMAKE_INSTALL_PREFIX=/usr .. && \
        make -j`nproc` install

        # Lotman
        git clone https://github.com/PelicanPlatform/lotman.git && \
        cd lotman && \
        git checkout v0.0.3 && \
        mkdir build && cd build && \
        # LotMan CMakeLists.txt needs to be updated to use -DLIB_INSTALL_DIR. Issue #6
        cmake -DCMAKE_INSTALL_PREFIX=/usr .. && \
        make -j`nproc` install

        #####################################
        # Install Custom XRootD (temporary) #
        #####################################
        git clone https://github.com/alja/xrootd.git && \
        cd xrootd && \
        git checkout purge-main-rb1 && \
        mkdir build && cd build && \
        cmake -DCMAKE_BUILD_TYPE=Debug .. && \
        make -j`nproc` install


    - name: Create Build Environment
      # Some projects don't allow in-source building, so create a separate build directory
      # We'll use this as our working directory for all subsequent commands
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      # Use a bash shell so we can use the same syntax for environment variable
      # access regardless of the host operating system
      shell: bash
      working-directory: ${{runner.workspace}}/build      
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DXROOTD_PLUGINS_BUILD_UNITTESTS=yes -DXROOTD_PLUGINS_EXTERNAL_GTEST=${{ matrix.external-gtest }}

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute the build.  You can specify a specific target with "--target <NAME>"
      run: cmake --build . --config $BUILD_TYPE

    - name: Unit Tests
      working-directory: ${{runner.workspace}}/build
      shell: bash
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C $BUILD_TYPE --verbose
